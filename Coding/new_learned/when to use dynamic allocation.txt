Use dynamic in the following situations:

-When you need a lot of memory. Typical stack size is 1 MB, so 
anything bigger than 50-100KB should better be dynamically allocated, 
or you're risking crash. Some platforms can have this limit even lower.

-When the memory must live after the function returns. 
Stack memory gets destroyed when function ends, 
dynamic memory is freed when you want.

-When you're building a structure (like array, or graph) 
of size that is unknown (i.e. may get big), dynamically changes
or is too hard to precalculate. Dynamic allocation allows your
 code to naturally request memory piece by piece at any moment 
and only when you need it. It is not possible to repeatedly 
request more and more stack space in a for loop.

-(Prefer stack allocation otherwise. It is faster and can not leak.)