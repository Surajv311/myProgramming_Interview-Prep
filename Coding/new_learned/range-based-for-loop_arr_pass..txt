Range based for-loop on array passed to non-main function

With the array decaying into a pointer we must pass 
with an array reference with size so that your range based loop works:

THIS WON'T WORK :( XXXXXXXXXXXXXXXXXXXXXX

int display(int (&arr)[5], int size , int k) {
// say we don't use & , then error 
// or say we don't define size in -> int (&arr)[] , then also error...

	for (auto i : arr) {
		cout << i << endl;
	}
	return 0;
}

int32_t main() {

	//int arr[] = {51, 42, 33, 24, 15};
// say we don't define the arr size and just pass it then error 

int arr[5] = {51, 42, 33, 24, 15};
	int size = sizeof arr / sizeof arr[0];
	int k = 3; // kth smallest element
	display(arr, size, k);

// cerr << "time: " << clock() << " ms" << '\n';
	return 0;
}

###########################

THIS WOULD WORK :) !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
int display(int (&arr)[5], int size , int k) {

	for (auto i : arr) {
		cout << i << endl;
	}
	return 0;
}

int32_t main() {

	int arr[5] = {51, 42, 33, 24, 15};
	int size = sizeof arr / sizeof arr[0];
	int k = 3; // kth smallest element
	display(arr, size, k);

// cerr << "time: " << clock() << " ms" << '\n';
	return 0;
}
---------------------------------------------------------------------------------

NOTE: All this is only for using range-based for loops.....