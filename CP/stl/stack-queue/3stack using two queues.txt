#include <bits/stdc++.h>
#include <algorithm>
#include <vector>
#include <queue>
using namespace std;

template<class T>

class Stack {
	queue<T>q1, q2;

public:
	void push(T x) {
		q1.push(x);
	}
	void pop() {
		// will remove the last added element as we are implementing stack using queue
		// we have to move the first n-1 elements in q2
// interchange the names

		if (q1.empty()) {
			return;
		}

		// the while loop extracts n-1 elements from q1 and adds them to q2
		while (q1.size() > 1) {

			T element = q1.front();
			q2.push(element);
			q1.pop();
		}
// this removes the last element from q1
		q1.pop();

// swap the names of q1 and q2
		swap(q1, q2);


	}
	T top() {

		while (q1.size() > 1) {
			T element = q1.front();

			q2.push(element);
			q1.pop();
		}

		T element = q1.front();
		q1.pop();
		q2.push(element);
		swap(q1, q2);
		return element;
	}

	int size() {
		return q1.size() + q2.size();

	}

	bool empty() {

		return size() == 0;
	}


};


int main()
{

	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

// TO IMPLEMENT STACK USING TWO QUEUES

	Stack<int> s;

	int n ; // size of the stack
	cin >> n;
	for (int i = 0 ; i < n; i++) {
		s.push(i);
	}

	while (!s.empty()) {

		cout << s.top();
		s.pop();
	}
}
